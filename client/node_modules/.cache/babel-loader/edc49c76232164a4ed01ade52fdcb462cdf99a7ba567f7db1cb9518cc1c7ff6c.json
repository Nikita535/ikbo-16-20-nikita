{"ast":null,"code":"import axios from \"axios\";\nconst $host = axios.create({\n  baseURL: \"http://localhost:5000/\"\n});\nconst $authHost = axios.create({\n  baseURL: \"http://localhost:5000/\"\n});\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n};\n$authHost.interceptors.request.use(authInterceptor);\nexport { $host, $authHost };","map":{"version":3,"names":["axios","$host","create","baseURL","$authHost","authInterceptor","config","headers","authorization","localStorage","getItem","interceptors","request","use"],"sources":["C:/Users/Nikita/Desktop/3/2 сем/Клиентские/ikbo-16-20-nikita/client/src/http/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst $host  = axios.create({\r\n    baseURL: \"http://localhost:5000/\"\r\n  });\r\n\r\n  const $authHost  = axios.create({\r\n    baseURL: \"http://localhost:5000/\"\r\n  });\r\n\r\n\r\nconst authInterceptor = config =>{\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config;\r\n}\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport {\r\n    $host,\r\n    $authHost\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,KAAK,GAAID,KAAK,CAACE,MAAM,CAAC;EACxBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAIJ,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE;AACX,CAAC,CAAC;AAGJ,MAAME,eAAe,GAAGC,MAAM,IAAG;EAC7BA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOJ,MAAM;AACjB,CAAC;AACDF,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;AAEnD,SACIJ,KAAK,EACLG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}