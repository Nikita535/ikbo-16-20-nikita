{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\\\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u0438\\u043A\\\\ikbo-16-20-nikita\\\\client\\\\src\\\\state.js\";\nimport root from './index';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"a8e57f0cdebfefde8d1b3c1f7f3e6755\";\nlet store = {\n  weather: {\n    temp: \"\",\n    city: \"\",\n    country: \"\",\n    sunrise: \"\",\n    sunset: \"\"\n  },\n  dialogsData: [{\n    id: 1,\n    name: 'Nikita'\n  }, {\n    id: 2,\n    name: 'Sasha'\n  }, {\n    id: 3,\n    name: 'Pasha'\n  }],\n  messageData: [{\n    id: 1,\n    message: 'Hi'\n  }, {\n    id: 2,\n    message: 'Hu'\n  }, {\n    id: 3,\n    message: 'Ho'\n  }]\n};\nexport let gettingWeather = async e => {\n  e.preventDefault();\n  const city = e.target.elements.city.value;\n  const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n  const data = await api_url.json();\n  store.weather = {\n    temp: data.main.temp,\n    city: data.name,\n    country: data.sys.country,\n    sunrise: data.sys.sunrise,\n    sunset: data.sys.sunset\n  };\n  root.render( /*#__PURE__*/_jsxDEV(App, {\n    state: store.weather\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 18\n  }, this));\n};\nexport let sendMessage = e => {\n  e.preventDefault();\n  const message = e.target.elements.message.value;\n  console.log(message);\n  store.messageData.push({\n    id: 4,\n    message: message\n  });\n  console.log(store.messageData);\n  root.render( /*#__PURE__*/_jsxDEV(App, {\n    store: store,\n    sendMessage: sendMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 18\n  }, this));\n};\nexport default store;","map":{"version":3,"names":["root","App","API_KEY","store","weather","temp","city","country","sunrise","sunset","dialogsData","id","name","messageData","message","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","main","sys","render","sendMessage","console","log","push"],"sources":["C:/Users/Nikita/Desktop/клиентсик/ikbo-16-20-nikita/client/src/state.js"],"sourcesContent":["import root from './index'\r\nimport App from './App';\r\n\r\nconst API_KEY = \"a8e57f0cdebfefde8d1b3c1f7f3e6755\";\r\n\r\n\r\nlet store = {\r\n    weather : {\r\n       temp: \"\",\r\n       city: \"\",\r\n       country: \"\",\r\n       sunrise: \"\",\r\n       sunset: \"\",\r\n   },\r\n       dialogsData : [\r\n       {id: 1,name:'Nikita'},\r\n       {id:2, name:'Sasha'},\r\n       {id:3, name:'Pasha'}\r\n   ],\r\n   \r\n       messageData : [\r\n       {id:1, message: 'Hi'},\r\n       {id:2, message: 'Hu'},\r\n       {id:3, message:'Ho'}\r\n   ]\r\n  }\r\n\r\nexport let gettingWeather = async (e) =>{\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const api_url =await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\r\n    const data =  await api_url.json();\r\n\r\n    store.weather = {\r\n        temp: data.main.temp,\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        sunrise: data.sys.sunrise,\r\n        sunset: data.sys.sunset,\r\n    }\r\n    root.render (<App state={store.weather}/>);\r\n}\r\n\r\n\r\nexport let sendMessage =  (e) => {\r\n    e.preventDefault();\r\n    const message = e.target.elements.message.value;\r\n    console.log(message);\r\n    store.messageData.push({id:4,message:message});\r\n    console.log(store.messageData);\r\n    root.render (<App store={store} sendMessage={sendMessage}/>);\r\n}\r\n    \r\n\r\n   export default store;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,GAAG,MAAM,OAAO;AAAC;AAExB,MAAMC,OAAO,GAAG,kCAAkC;AAGlD,IAAIC,KAAK,GAAG;EACRC,OAAO,EAAG;IACPC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACZ,CAAC;EACGC,WAAW,EAAG,CACd;IAACC,EAAE,EAAE,CAAC;IAACC,IAAI,EAAC;EAAQ,CAAC,EACrB;IAACD,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC;EAAO,CAAC,EACpB;IAACD,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC;EAAO,CAAC,CACvB;EAEGC,WAAW,EAAG,CACd;IAACF,EAAE,EAAC,CAAC;IAAEG,OAAO,EAAE;EAAI,CAAC,EACrB;IAACH,EAAE,EAAC,CAAC;IAAEG,OAAO,EAAE;EAAI,CAAC,EACrB;IAACH,EAAE,EAAC,CAAC;IAAEG,OAAO,EAAC;EAAI,CAAC;AAEzB,CAAC;AAEH,OAAO,IAAIC,cAAc,GAAG,MAAOC,CAAC,IAAI;EACpCA,CAAC,CAACC,cAAc,EAAE;EAClB,MAAMX,IAAI,GAAGU,CAAC,CAACE,MAAM,CAACC,QAAQ,CAACb,IAAI,CAACc,KAAK;EACzC,MAAMC,OAAO,GAAE,MAAMC,KAAK,CAAE,qDAAoDhB,IAAK,UAASJ,OAAQ,EAAC,CAAC;EACxG,MAAMqB,IAAI,GAAI,MAAMF,OAAO,CAACG,IAAI,EAAE;EAElCrB,KAAK,CAACC,OAAO,GAAG;IACZC,IAAI,EAAEkB,IAAI,CAACE,IAAI,CAACpB,IAAI;IACpBC,IAAI,EAAEiB,IAAI,CAACX,IAAI;IACfL,OAAO,EAAEgB,IAAI,CAACG,GAAG,CAACnB,OAAO;IACzBC,OAAO,EAAEe,IAAI,CAACG,GAAG,CAAClB,OAAO;IACzBC,MAAM,EAAEc,IAAI,CAACG,GAAG,CAACjB;EACrB,CAAC;EACDT,IAAI,CAAC2B,MAAM,eAAE,QAAC,GAAG;IAAC,KAAK,EAAExB,KAAK,CAACC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAE,CAAC;AAC9C,CAAC;AAGD,OAAO,IAAIwB,WAAW,GAAKZ,CAAC,IAAK;EAC7BA,CAAC,CAACC,cAAc,EAAE;EAClB,MAAMH,OAAO,GAAGE,CAAC,CAACE,MAAM,CAACC,QAAQ,CAACL,OAAO,CAACM,KAAK;EAC/CS,OAAO,CAACC,GAAG,CAAChB,OAAO,CAAC;EACpBX,KAAK,CAACU,WAAW,CAACkB,IAAI,CAAC;IAACpB,EAAE,EAAC,CAAC;IAACG,OAAO,EAACA;EAAO,CAAC,CAAC;EAC9Ce,OAAO,CAACC,GAAG,CAAC3B,KAAK,CAACU,WAAW,CAAC;EAC9Bb,IAAI,CAAC2B,MAAM,eAAE,QAAC,GAAG;IAAC,KAAK,EAAExB,KAAM;IAAC,WAAW,EAAEyB;EAAY;IAAA;IAAA;IAAA;EAAA,QAAE,CAAC;AAChE,CAAC;AAGE,eAAezB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}